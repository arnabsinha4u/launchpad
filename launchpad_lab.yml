#!/usr/bin/env ansible-playbook

- hosts: all
  become: yes
  gather_facts: yes
  vars:
    users: 1
    slaves: 1
    group_name: launchpad_lab
    lab_name: launchpad_example_httpd

  tasks:
    - name: Baseline Machine
      yum: name={{ item }} state=present
      with_items:
        - docker
        - python-pip
        - python-docker-py
      tags:
        - baseline

    - name: Start Docker Engine
      service: name=docker state=started
      tags:
        - baseline

    - name: Backup existing SSH config
      copy: src=/etc/ssh/ssh_config dest=/etc/ssh/ssh_config_backup
      tags:
        - ssh
        - backup_ssh
        - baseline

    - name: Create group for lab users
      group:
           name={{ group_name }}
           state=present
      tags:
        - group
        - baseline

    - name: Create lab user, home with default password, ssh keys - loop
      user:
          name={{ item }}
          comment={{ item }}
          password={{ item | password_hash('sha512') }}
          home=/home/{{ item }}
          group={{ group_name }}
          generate_ssh_key=yes
          ssh_key_file=.ssh/id_rsa
          update_password=always
          state=present
      with_sequence: start=1 end={{ users }} format={{ group_name}}user%d
      tags:
        - users
        - baseline

    - name: unlock sshd_config
      command: chattr -i /etc/ssh/sshd_config
      changed_when: yes
      tags:
        - ssh
        - users
        - baseline

    - name: insert users in sshd allowedusers
      replace:
        dest: /etc/ssh/sshd_config
        regexp: '^(AllowUsers(?!.*\b{{ item }}\b).*)$'
        replace: '\1 {{ item }}'
      with_sequence: start=1 end={{ users }} format={{ group_name}}user%d
      tags:
        - ssh
        - users
        - baseline

    - name: lock sshd_config
      command: chattr +i /etc/ssh/sshd_config
      changed_when: yes
      tags:
        - ssh
        - users
        - baseline

    - name: Build Image (Module)
      docker_image:
        path: "{{ lab_name }}"
        dockerfile: Dockerfile
        state: present
        name: "{{ lab_name }}/master"
        tag: latest
      tags:
        - m_startup
        - m_build_images

    - name: Build Image (CLI)
      command: docker build -t "{{ lab_name }}"/master:latest {{ item }}
      tags:
        - cli_startup
        - cli_build_images

    - include: {{ lab_name }}/launchpad_looper.yml
      with_sequence: start=1 end={{ users }}
      loop_control:
        loop_var: master_name

    - name: Remove lab users
      user:
        name={{ item }}
        state=absent
        force=yes
        remove=yes
      with_sequence: start=1 end={{ users }} format={{ group_name}}user%d
      tags:
        - remove_users
        - remove_baseline

    - name: Remove lab user group
      group:
        name={{ group_name}}
        state=absent
      tags:
        - remove_group
        - remove_baseline

    - name: Unlock sshd_config
      command: chattr -i /etc/ssh/sshd_config
      changed_when: yes
      tags:
        - revert_ssh
        - remove_users
        - remove_baseline

    - name: Delete lab users from sshd allowedusers
      replace:
        dest: /etc/ssh/sshd_config
        regexp: '{{ item }}\s?\b'
        replace: ''
      with_sequence: start=1 end={{ users }} format={{ group_name}}user%d
      tags:
        - revert_ssh
        - remove_users
        - remove_baseline

    - name: Lock sshd_config
      command: chattr +i /etc/ssh/sshd_config
      changed_when: yes
      tags:
        - revert_ssh
        - remove_users
        - remove_baseline
